name: CI for book
on: 
    push:
        branches: [main]
    pull_request:
        paths-ignore:
            - "README.md"
            - "frontend/**"
jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        steps:
            # 対象のGithubリポジトリを、このワークフロー内でクローする
            - uses: actions/checkout@v4

            # Rustの成果物をキャッシュ。2度目以降のCIを高速化
            - name: Cache dependencies
              uses: Swatinem/rust-cache@v2

            # Rustのツールチェインをインストール
            # rustfmt, clippyなどもインストール
            - name: Install Rust toochain
              run: |
                rustup toolchain install stable

            # cargo-nextest, cargo-makeをインストール
            - name: Install cargo-related tools
              uses: taiki-e/install-action@v2
              with: 
                tool: nextest, cargo-make
            
            # テストコードを含むプロジェクト全体をビルド
            # --no-run: テストをせずにビルドだけ行う
            # --locked: Cargo.lockを参照し、Cargo.lockが存在しないか、最新状態でない場合はエラーとしてビルドしない
            # clippyとテストの前にビルドしておくことで、CIの時間を短縮
            - name: Tests compile
              run: cargo make test-ci --no-run --locked

            # テスト実行
            - name: Test
              run: cargo make test-ci
            
            # リンター（clippy）実行
            - name: Clippy
              run: cargo make clippy-ci -- -Dwarnings
            
            # フォーマットチェック
            - name: Rustfmt
              run: cargo make fmt -- --check
            